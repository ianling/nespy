class ROMFormat:
    INES = 0
    INES2_0 = 1


class Mapper:
    """
    Maps mapper names to mapper values found in iNES ROMs
    """
    NROM = 0
    MMC1 = 1
    UXROM = 2
    CNROM = 3
    MMC3 = 4
    AXROM = 7
    MMC2 = 9


class PPURegister:
    PPUCTRL = 0x2000
    PPUMASK = 0x2001
    PPUSTATUS = 0x2002
    OAMADDR = 0x2003
    OAMDATA = 0x2004
    PPUSCROLL = 0x2005
    PPUADDR = 0x2006
    PPUDATA = 0x2007


InstructionMnemonicMap = {
    0x69: "ADC", 0x65: "ADC", 0x75: "ADC", 0x6D: "ADC",
    0x7D: "ADC", 0x79: "ADC", 0x61: "ADC", 0x71: "ADC",
    0x29: "AND", 0x25: "AND", 0x35: "AND", 0x2D: "AND",
    0x3D: "AND", 0x39: "AND", 0x21: "AND", 0x31: "AND",
    0x0A: "ASL", 0x06: "ASL", 0x16: "ASL", 0x0E: "ASL",
    0x1E: "ASL",
    0x90: "BCC",
    0xB0: "BCS",
    0xF0: "BEQ",
    0x24: "BIT", 0x2C: "BIT",
    0x30: "BMI",
    0xD0: "BNE",
    0x10: "BPL",
    0x0: "BRK",
    0x50: "BVC",
    0x70: "BVS",
    0x18: "CLC",
    0xD8: "CLD",
    0x58: "CLI",
    0xB8: "CLV",
    0xC9: "CMP", 0xC5: "CMP", 0xD5: "CMP", 0xCD: "CMP",
    0xDD: "CMP", 0xD9: "CMP", 0xC1: "CMP", 0xD1: "CMP",
    0xE0: "CPX", 0xE4: "CPX", 0xEC: "CPX",
    0xC0: "CPY", 0xC4: "CPY", 0xCC: "CPY",
    0xC6: "DEC", 0xD6: "DEC", 0xCE: "DEC", 0xDE: "DEC",
    0xCA: "DEX",
    0x88: "DEY",
    0x49: "EOR", 0x45: "EOR", 0x55: "EOR", 0x4D: "EOR",
    0x5D: "EOR", 0x59: "EOR", 0x41: "EOR", 0x51: "EOR",
    0xE6: "INC", 0xF6: "INC", 0xEE: "INC", 0xFE: "INC",
    0xE8: "INX",
    0xC8: "INY",
    0x4C: "JMP", 0x6C: "JMP",
    0x20: "JSR",
    0xA9: "LDA", 0xA5: "LDA", 0xB5: "LDA", 0xAD: "LDA",
    0xBD: "LDA", 0xB9: "LDA", 0xA1: "LDA", 0xB1: "LDA",
    0xA2: "LDX", 0xA6: "LDX", 0xB6: "LDX", 0xAE: "LDX",
    0xBE: "LDX",
    0xA0: "LDY", 0xA4: "LDY", 0xB4: "LDY", 0xAC: "LDY",
    0xBC: "LDY",
    0x4A: "LSR", 0x46: "LSR", 0x56: "LSR", 0x4E: "LSR",
    0x5E: "LSR",
    0xEA: "NOP", 0x1A: "NOP", 0x3A: "NOP", 0x5A: "NOP",
    0x7A: "NOP", 0xDA: "NOP", 0xFA: "NOP",
    0x80: "NOP",  # _immediate,
    0x82: "NOP",  # _immediate,
    0x89: "NOP",  # _immediate,
    0xC2: "NOP",  # _immediate,
    0xE2: "NOP",  # _immediate,
    0x09: "ORA", 0x05: "ORA", 0x15: "ORA", 0x0D: "ORA",
    0x1D: "ORA", 0x19: "ORA", 0x01: "ORA", 0x11: "ORA",
    0x48: "PHA",
    0x08: "PHP",
    0x68: "PLA",
    0x28: "PLP",
    0x2A: "ROL", 0x26: "ROL", 0x36: "ROL", 0x2E: "ROL",
    0x3E: "ROL",
    0x6A: "ROR", 0x66: "ROR", 0x76: "ROR", 0x6E: "ROR",
    0x7E: "ROR",
    0x40: "RTI",
    0x60: "RTS",
    0xE9: "SBC", 0xE5: "SBC", 0xF5: "SBC", 0xED: "SBC",
    0xFD: "SBC", 0xF9: "SBC", 0xE1: "SBC", 0xF1: "SBC",
    0x38: "SEC",
    0xF8: "SED",
    0x78: "SEI",
    0x85: "STA", 0x95: "STA", 0x8D: "STA", 0x9D: "STA",
    0x99: "STA", 0x81: "STA", 0x91: "STA",
    0x86: "STX", 0x96: "STX", 0x8E: "STX",
    0x84: "STY", 0x94: "STY", 0x8C: "STY",
    0xAA: "TAX",
    0xA8: "TAY",
    0xBA: "TSX",
    0x8A: "TXA",
    0x9A: "TXS",
    0x98: "TYA"
}


class AddressingMode:
    Absolute = "absolute"
    AbsoluteX = "absolute,x"
    AbsoluteY = "absolute,y"
    ZeroPage = "zeropage"
    ZeroPageX = "zeropage,x"
    ZeroPageY = "zeropage,y"
    Immediate = "immediate"
    Relative = "relative"
    Implicit = "implicit"
    Indirect = "indirect"
    IndirectX = "indirect,x"
    IndirectY = "indirect,y"


InstructionAddressingModeMap = {  # addressing mode used by the instruction
    **dict.fromkeys([0x6D, 0x2D, 0x0E, 0x2C,
                     0xCD, 0xEC, 0xCC, 0xCE,
                     0x4D, 0xEE, 0x4C, 0x20,
                     0xAD, 0xAC, 0x4E, 0x0D,
                     0x2E, 0x6E, 0xED, 0x8D,
                     0x8E, 0x8C, 0xAE],
                    AddressingMode.Absolute),
    **dict.fromkeys([0x7D, 0x3D, 0x1E, 0xDD,
                     0xDE, 0x5D, 0xFE, 0xBD,
                     0xBC, 0x5E, 0x1D, 0x3E,
                     0x7E, 0xFD, 0x9D],
                    AddressingMode.AbsoluteX),
    **dict.fromkeys([0x79, 0x39, 0xD9, 0x59,
                     0xB9, 0x19, 0xF9, 0x99,
                     0xBE],
                    AddressingMode.AbsoluteY),
    **dict.fromkeys([0x65, 0x25, 0x06, 0x24,
                     0xC5, 0xE4, 0xC4, 0xC6,
                     0x45, 0xE6, 0xA5, 0xA4,
                     0x46, 0x05, 0x26, 0x66,
                     0xE5, 0x85, 0x86, 0x84,
                     0xA6],
                    AddressingMode.ZeroPage),
    **dict.fromkeys([0x75, 0x35, 0x16, 0xD5,
                     0xD6, 0x55, 0xF6, 0xB5,
                     0xB4, 0x56, 0x15, 0x36,
                     0x76, 0xF5, 0x95, 0x94,
                     0xB6],
                    AddressingMode.ZeroPageX),
    **dict.fromkeys([0x96],
                    AddressingMode.ZeroPageY),
    **dict.fromkeys([0x69, 0x29, 0xC9, 0xE0,
                     0xC0, 0x49, 0xA9, 0xA2,
                     0x09, 0xE9, 0xA0],
                    AddressingMode.Immediate),
    **dict.fromkeys([0x90, 0xB0, 0xF0, 0x30,
                     0xD0, 0x10, 0x50, 0x70],
                    AddressingMode.Relative),
    **dict.fromkeys([0x0A, 0x00, 0x18, 0xD8,
                     0x58, 0xB8, 0xCA, 0x88,
                     0xE8, 0xC8, 0x4A, 0xEA,
                     0x48, 0x08, 0x68, 0x28,
                     0x2A, 0x6A, 0x40, 0x60,
                     0x38, 0xF8, 0x78, 0xAA,
                     0xA8, 0xBA, 0x8A, 0x9A,
                     0x98],
                    AddressingMode.Implicit),
    **dict.fromkeys([0x6C],
                    AddressingMode.Indirect),
    **dict.fromkeys([0x61, 0x21, 0xC1, 0x41,
                     0xA1, 0x01, 0xE1, 0x81],
                    AddressingMode.IndirectX),
    **dict.fromkeys([0x71, 0x31, 0xD1, 0x51,
                     0xB1, 0x11, 0xF1, 0x91],
                    AddressingMode.IndirectY),
}


InstructionLengthMap = {  # number of bytes each instruction takes up in memory
    **dict.fromkeys([0x0A, 0x00, 0x18, 0xD8,
                     0x58, 0xB8, 0xCA, 0x88,
                     0xE8, 0xC8, 0x4A, 0xEA,
                     0x48, 0x08, 0x68, 0x28,
                     0x2A, 0x6A, 0x40, 0x60,
                     0x38, 0xF8, 0x78, 0xAA,
                     0xA8, 0xBA, 0x8A, 0x9A,
                     0x98],
                    1),
    **dict.fromkeys([0x69, 0x65, 0x75, 0x61,
                     0x71, 0x29, 0x25, 0x35,
                     0x21, 0x31, 0x06, 0x16,
                     0x90, 0xB0, 0xF0, 0x24,
                     0x30, 0xD0, 0x10, 0x50,
                     0x70, 0xC9, 0xC5, 0xD5,
                     0xC1, 0xD1, 0xE0, 0xE4,
                     0xC0, 0xC4, 0xC6, 0xD6,
                     0x49, 0x45, 0x55, 0x41,
                     0x51, 0xE6, 0xF6, 0xA9,
                     0xA5, 0xB5, 0xA1, 0xB1,
                     0xA2, 0xA6, 0xB6, 0xA0,
                     0xA4, 0xB4, 0x46, 0x56,
                     0x09, 0x05, 0x15, 0x01,
                     0x11, 0x26, 0x36, 0x66,
                     0x76, 0xE9, 0xE5, 0xF5,
                     0xE1, 0xF1, 0x85, 0x95,
                     0x81, 0x91, 0x86, 0x96,
                     0x84, 0x94],
                    2),
    **dict.fromkeys([0x6D, 0x7D, 0x79, 0x2D,
                     0x3D, 0x39, 0x0E, 0x1E,
                     0x2C, 0xCD, 0xDD, 0xD9,
                     0xEC, 0xCC, 0xCE, 0xDE,
                     0x4D, 0x5D, 0x59, 0xEE,
                     0xFE, 0x4C, 0x6C, 0x20,
                     0xAD, 0xBD, 0xB9, 0xAE,
                     0xBE, 0xAC, 0xBC, 0x4E,
                     0x5E, 0x0D, 0x1D, 0x19,
                     0x2E, 0x3E, 0x6E, 0x7E,
                     0xED, 0xFD, 0xF9, 0x8D,
                     0x9D, 0x99, 0x8E, 0x8C],
                    3)
}


AddressingModeDisasmFormat = {  # the format string printed by the disassembler for each addressing mode
    AddressingMode.Absolute: "${operand}",
    AddressingMode.AbsoluteX: "${operand},X",
    AddressingMode.AbsoluteY: "${operand},Y",
    AddressingMode.ZeroPage: "${operand}",
    AddressingMode.ZeroPageX: "${operand},X",
    AddressingMode.ZeroPageY: "${operand},Y",
    AddressingMode.Immediate: "#${operand}",
    AddressingMode.Relative: "${operand}; = ${value2}",
    AddressingMode.Implicit: "",
    AddressingMode.Indirect: "(${operand})",
    AddressingMode.IndirectX: "(${operand},X)",
    AddressingMode.IndirectY: "(${operand}),Y"
}


InstructionDisasmExtras = {
    # any additional information to show when disassembling certain instructions
    # example: "STX $20 ;= FF", meaning X was stored in memory at 0x20, and the value of X was 0xFF
    **dict.fromkeys([0x85, 0x95, 0x8D, 0x9D,
                     0x99, 0x81, 0x91], "; = {a}"),  # STA
    **dict.fromkeys([0x86, 0x96, 0x8E], "; = {x}"),  # STX
    **dict.fromkeys([0x84, 0x94, 0x8C], "; = {y}"),  # STY
    **dict.fromkeys([0x24, 0x2C], "; = {value2}"),  # BIT
}
